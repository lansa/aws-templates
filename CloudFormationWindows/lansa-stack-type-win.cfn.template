{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Stack type LANSA Windows template: This template installs a highly-available, scalable LANSA deployment using a multi-AZ Amazon RDS database instance for storage.  **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "StackType": {
            "Description": "Stack Type",
            "Type": "String",
            "Default": "Small",
            "AllowedValues": [
                "Development",
                "Test",
                "Small",
                "Medium",
                "Large"
            ]
        },
        "CreateVPC": {
            "Description": "Create a new VPC with necessary access control lists (ACLs) and security groups",
            "Type": "String",
            "Default": "No",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "CurrentVPC": {
            "Description": "Existing VPC id. If creating a new VPC you must still select a valid existing VPC in order to pass CFT validation.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved. If using an existing VPC you must still select a valid Availability Zone in order to pass CFT validation.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "Default": "3",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String",
            "AllowedValues": [
                "2",
                "3"
            ]
        },
        "DBSubnetGroupName": {
            "Default": "",
            "Description": "The name of the DB Subnet Group which needs to be provided if using an existing VPC. DB Subnet Group Name can be checked in the Amazon RDS console in the Subnet section along with the VPC in which it was created.",
            "Type": "String"
        },
        "ELBSubnetIds": {
            "Description": "List of Subnet IDs for ELB which needs to be provided if using an existing VPC. If you are creating a new VPC you must still select a valid subnet in order to pass CFT validation.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "01LansaMSI": {
            "Type": "String",
            "Description": "URL of the LANSA MSI to install. The MSI must have been previously uploaded to the specified location in Amazon S3 BLOB storage. Here is an example application you may use https://s3-ap-southeast-2.amazonaws.com/lansa/app/Test/AWAMAPP_v14.2.21217_en-us.msi"
        },
        "03DBUsername": {
            "Description": "The LANSA database administrator account username. Must begin with a letter and contain only alphanumeric characters. Maximum length 16.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*"
        },
        "04DBPassword": {
            "NoEcho": "true",
            "Description": "The LANSA database administrator account password. Minimum length 8, maximum length 41. There must be at least one character from each of the following character classes: uppercase letters, lowercase letters and numeric digits. Only printable ASCII characters, not including '/', '@', '\"', and space, may be used.",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "(?!.*[/\"@\\s])(?=.*\\d)(?=.*[A-Z])(?=.*[a-z]).{8,41}"
        },
        "05WebUser": {
            "Type": "String",
            "Default": "PCXUSER2",
            "Description": "User to use for running web jobs."
        },
        "06WebPassword": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Password for WebUser. Minimum length 8, maximum length 41. There must be at least one character from each of the following character classes: uppercase letters, lowercase letters and numeric digits. A space must not be used. This password must conform to Account Policy rules. E.g. The whole user name must not be in the password. With user name 'lansa', 'lansa!@#$abc' will NOT be accepted as a password. With user name 'lansa2', 'lansa!123' will be accepted as a password. See https://technet.microsoft.com/en-au/library/cc786468(v=ws.10).aspx for more information.",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "(?!.*[\\s])(?=.*\\d)(?=.*[A-Z])(?=.*[a-z]).{8,41}"
        },
        "07KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable remote access to the instances via RDP (case sensitive). e.g. linux-keypair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "08RemoteAccessLocation": {
            "Description": "The IP address range that may be used to remotely access the EC2 instances. Must be a valid IP CIDR range of the form x.x.x.x/x. e.g. 103.231.169.65/32 This is a security feature which limits remote access to your EC2 instances.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "10LansaGitRepoBranch": {
            "Default": "support/scalable",
            "Description": "Git branch to checkout from Lansa Git repository and the S3 folder from which the nested templates are loaded. This pulls in the script files which are used to assemble the Icing. This is performed during the initial launch and also everytime a Trigger is fired.",
            "Type": "String"
        },
        "UpdateManagementScripts": {
            "Default": "Yes",
            "Description": "Setting this parameter to Yes pulls the latest changes from a LANSA-managed github repo named robe070/cookbooks",
            "Type": "String",
            "AllowedValues": [
                "No",
                "Yes"
            ]
        },
        "11WebserverOSVersion": {
            "Default": "win2019",
            "Description": "WebServer Windows operating system version.",
            "Type": "String",
            "AllowedValues": [
                "win2016",
                "win2019",
                "win2016jpn",
                "win2019jpn",
                "win2022",
                "win2022jpn"
            ]
        },
        "LansaVersion": {
            "Default": "V15 GA",
            "Type": "String",
            "AllowedValues": [
                "V15 GA",
                "V14 SP2"
            ],
            "Description": "Visual LANSA Version"
        },
        "ImageSource": {
            "Default": "Marketplace",
            "Type": "String",
            "AllowedValues": [
               "Marketplace",
               "Custom"
            ],
            "Description": "Location from where the image must be picked"
        },
        "AMIId": {
            "Default": "",
            "Type": "String",
            "Description": "The AMI Id of the custom image. Not required when Image Source is set to Marketplace"
        },
        "DBCCSID": {
            "Default": "",
            "Description": "Database Server Collation. Defaults to SQL Server default of English US when left unspecified",
            "Type": "String"
        },
        "DBTimeZone": {
            "Default": "",
            "Description": "Database Server Time Zone. It is recommended not to change this setting. Defaults to SQL Server default of UTC/GMT when left unspecified",
            "Type": "String"
        },
        "25TriggerWebConfig": {
            "Default": "1",
            "Type": "String",
            "Description": "Update Stack: Increment this by one to trigger an update to the web configuration"
        },
        "26TriggerIcingUpdate": {
            "Default": "1",
            "Type": "String",
            "Description": "Update Stack: Increment this by one to trigger an MSI Upgrade. Obtains the specified MSI and installs it. Ensure the LansaMSI parameter is set correctly."
        },
        "27TriggerPatchInstall": {
            "Default": "1",
            "Type": "String",
            "Description": "Update Stack: Increment this by one to trigger patches to be installed.  Obtains all MSPs from the PatchBucket and PatchFolder and applies those not already applied. The PatchFolder is usually specified as just the folder in which the patches are located. e.g. 'app/Test'. Its also possible to limit it to a particular file match e.g. to limit it to just install the patches for a particular version - 'app/Test/AWAMAPP_v1.0.0.' N.B. ensure there is a '.' on the end of the name to ensure that only patches for this version are applied."
        },
        "28PatchBucketName": {
            "Default": "lansa",
            "Type": "String",
            "Description": "Update Stack: S3 Bucket which will contain the patches. (case sensitive). See TriggerPatchInstall parameter for more details."
        },
        "29PatchFolderName": {
            "Default": "/change me",
            "Type": "String",
            "Description": "Update Stack: S3 folder which will contain the patches. (case sensitive). Note that ALL sub-directories are searched so ensure the directory used to store the patches has no sub directories. For the demo use app/test-patches. See TriggerPatchInstall parameter for more details."
        },
        "TagName": {
            "Default": "Environment",
            "Type": "String",
            "Description": "Name of the tag with which to tag every resource"
        },
        "TagValue": {
            "Default": "Production",
            "Type": "String",
            "Description": "Value of the tag with which to tag every resource"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": { "default": "Essential Parameters" },
                    "Parameters" : [
                        "StackType",
                        "01LansaMSI",
                        "03DBUsername",
                        "04DBPassword",
                        "05WebUser",
                        "06WebPassword",
                        "07KeyName",
                        "08RemoteAccessLocation"
                    ]
                },
                {
                    "Label": { "default": "Use Existing VPC or add a new VPC" },
                    "Parameters": [
                        "CreateVPC",
                        "CurrentVPC",
                        "AvailabilityZones",
                        "NumberOfAZs",
                        "DBSubnetGroupName",
                        "ELBSubnetIds"
                    ]
                },
                {
                    "Label": { "default":"Database Server Configuration" },
                    "Parameters" : [
                        "DBCCSID",
                        "DBTimeZone"
                    ]
                },
                {
                    "Label": { "default":"Web Server Configuration" },
                    "Parameters" : [
                        "LansaVersion",
                        "11WebserverOSVersion",
                        "ImageSource",
                        "AMIId"
                    ]
                },
                {
                    "Label": { "default":"Stack Maintenance" },
                    "Parameters" : [
                        "25TriggerWebConfig",
                        "26TriggerIcingUpdate",
                        "27TriggerPatchInstall",
                        "28PatchBucketName",
                        "29PatchFolderName"
                    ]
                },
                {
                  "Label" : { "default":"Advanced Configuration" },
                  "Parameters" : [
                      "TagName",
                      "TagValue",
                      "UpdateManagementScripts",
                      "10LansaGitRepoBranch"
                   ]
                }
            ],
            "ParameterLabels": {
                "CreateVPC": { "default": "Create new VPC " },
                "CurrentVPC": { "default": "Provide existing VPC Id" },
                "AvailabilityZones": { "default": "Availability Zones" },
                "NumberOfAZs": { "default": "Number of Availability Zones" },
                "DBSubnetGroupName": { "default": "DB Subnet Group Name"},
                "ELBSubnetIds": { "default": "Subnet IDs for ELB"},
                "StackType": { "default": "Stack Type"},
                "01LansaMSI": { "default": "Lansa MSI URL" },
                "03DBUsername": { "default": "Database User Name" },
                "04DBPassword": { "default": "Database Password" },
                "05WebUser": { "default": "Web Server User" },
                "06WebPassword": { "default": "Web Server Password" },
                "07KeyName": { "default": "Keypair Name" },
                "08RemoteAccessLocation": { "default": "Remote Access Location CIDR" },

                "DBCCSID" : { "default" : "SQL Server Collation" },
                "DBTImeZone" : { "default" : "SQL Server Time Zone" },

                "LansaVersion":  { "default":  "Visual LANSA Version"},
                "11WebserverOSVersion":  { "default":  "OS Version"},
                "ImageSource" :  { "default" :  "Image Source"},
                "AMIId" :  { "default" :  "AMI Id"},

                "25TriggerWebConfig": { "default": "Trigger Web Config" },
                "26TriggerIcingUpdate": { "default": "Trigger Icing Update" },
                "27TriggerPatchInstall": { "default": "Trigger Patch Install" },
                "28PatchBucketName": { "default": "Patch Bucket Name" },
                "29PatchFolderName": { "default": "Patch Folder Name" },

                "TagName": { "default": "Tag Name" },
                "TagValue": { "default": "Tag Value" },

                "10LansaGitRepoBranch": { "default": "Git Repository Branch" },
                "UpdateManagementScripts" : { "default" : "Update Management Scripts"}
            }
        }
    },
    "Mappings": {
        "StackDifferences": {
            "Metadata": { "Comment1": "Table of differences between the 5 Stack Types" },
            "13DBInstanceClass": { "Development": "db.t3.small", "Test" : "db.t3.large",  "Small" : "db.t3.2xlarge",  "Medium" : "db.r5.xlarge",  "Large" : "db.r5.8xlarge" },
            "15DBEngine": { "Development": "sqlserver-ex", "Test" : "sqlserver-web",  "Small" : "sqlserver-web",  "Medium" : "sqlserver-se",  "Large" : "sqlserver-ee" },
            "19DBAllocatedStorage": { "Development": "20", "Test" : "100",  "Small" : "500",  "Medium" : "1000",  "Large" : "1000" },
            "DBIOPSRatio": { "Development": "0", "Test" : "10",  "Small" : "10",  "Medium" : "10",  "Large" : "10" },
            "11WebServerInstanceTyp": { "Development": "t3.micro", "Test" : "t3.medium",  "Small" : "t3.medium",  "Medium" : "t3.2xlarge",  "Large" : "r5.large" },
            "12WebServerMaxConnec": { "Development": "10", "Test" : "20",  "Small" : "20",  "Medium" : "60",  "Large" : "120" }
        },
        "CustomVariable": {
            "TemplateRoot": { "Value": "https://lansa.s3.ap-southeast-2.amazonaws.com/templates/" },
            "MasterTemplate": { "Value": "lansa-master-win.cfn.template" },
            "TemplateLevel": { "Value": "R" }
        }
    },
    "Conditions": {
        "IsReleaseLevel": {"Fn::Equals": [{ "Fn::FindInMap": [ "CustomVariable", "TemplateLevel", "Value" ] }, "R"]}
    },
    "Resources": {
        "MasterStackApp": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Tags" : [ { "Key" : {"Ref":"TagName"}, "Value" : {"Ref":"TagValue"} } ],
                "TemplateURL": { "Fn::If": [ "IsReleaseLevel",
                    { "Fn::Join": ["", [
                        { "Fn::FindInMap": [ "CustomVariable", "TemplateRoot", "Value" ] },
                        { "Ref": "10LansaGitRepoBranch" },
                        "/",
                        { "Fn::FindInMap": [ "CustomVariable", "MasterTemplate", "Value" ] }
                    ]]}  ,
                    { "Fn::Join": ["", [
                        { "Fn::FindInMap": [ "CustomVariable", "TemplateRoot", "Value" ] },
                        { "Ref": "10LansaGitRepoBranch" },
                        "/beta/",
                        { "Fn::FindInMap": [ "CustomVariable", "MasterTemplate", "Value" ] }
                    ]]}
                ]},
                "Parameters": {
                    "CreateVPC": { "Ref" : "CreateVPC" },
                    "CurrentVPC": { "Ref" : "CurrentVPC" },
                    "AvailabilityZones": { "Fn::Join": [",", { "Ref": "AvailabilityZones" }]},
                    "NumberOfAZs": { "Ref" : "NumberOfAZs" },
                    "DBSubnetGroupName": { "Ref" : "DBSubnetGroupName" },
                    "ELBSubnetIds": { "Fn::Join": [",", { "Ref": "ELBSubnetIds" }]},
                    "01LansaMSI": { "Ref" : "01LansaMSI" },
                    "03DBUsername": { "Ref" : "03DBUsername" },
                    "04DBPassword": { "Ref" : "04DBPassword" },
                    "05WebUser": { "Ref" : "05WebUser" },
                    "06WebPassword": { "Ref" : "06WebPassword" },
                    "07KeyName": { "Ref" : "07KeyName" },
                    "08RemoteAccessLocation": { "Ref" : "08RemoteAccessLocation" },

                    "13DBInstanceClass": { "Fn::FindInMap" : [ "StackDifferences", "13DBInstanceClass", { "Ref": "StackType" }]},
                    "14DBName": "lansa",
                    "15DBEngine": { "Fn::FindInMap" : [ "StackDifferences", "15DBEngine", { "Ref": "StackType" }]},
                    "19DBAllocatedStorage": { "Fn::FindInMap" : [ "StackDifferences", "19DBAllocatedStorage", { "Ref": "StackType" }]},
                    "DBIOPSRatio":{ "Fn::FindInMap" : [ "StackDifferences", "DBIOPSRatio", { "Ref": "StackType" }]},
                    "DBCCSID": { "Ref": "DBCCSID" },
                    "DBTimeZone": { "Ref": "DBTimeZone" },

                    "LansaVersion": { "Ref" : "LansaVersion" },
                    "11WebserverOSVersion": { "Ref" : "11WebserverOSVersion" },
                    "ImageSource" : { "Ref" : "ImageSource" },
                    "AMIId" : { "Ref" : "AMIId" },
                    "11WebServerInstanceTyp" : { "Fn::FindInMap" : [ "StackDifferences", "11WebServerInstanceTyp", { "Ref": "StackType" }]},
                    "12WebServerMaxConnec" : { "Fn::FindInMap" : [ "StackDifferences", "12WebServerMaxConnec", { "Ref": "StackType" }]},

                    "25TriggerWebConfig": { "Ref" : "25TriggerWebConfig" },
                    "26TriggerIcingUpdate": { "Ref" : "26TriggerIcingUpdate" },
                    "27TriggerPatchInstall": { "Ref" : "27TriggerPatchInstall" },
                    "28PatchBucketName": { "Ref" : "28PatchBucketName" },
                    "29PatchFolderName": { "Ref" : "29PatchFolderName" },

                    "10LansaGitRepoBranch": { "Ref" : "10LansaGitRepoBranch" },
                    "UpdateManagementScripts": { "Ref" : "UpdateManagementScripts" }
                }
            }
        }
    },
    "Outputs": {
        "WebsiteURL": {
           "Value": { "Fn::GetAtt": ["MasterStackApp", "Outputs.WebsiteURL"] },
           "Description": "LANSA App Website"
        }
     }
}